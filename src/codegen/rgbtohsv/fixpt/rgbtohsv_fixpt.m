%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%                                                                          %
%       Generated by MATLAB 8.2, MATLAB Coder 2.5 and HDL Coder 3.3        %
%                                                                          %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%#codegen
function [h,s,v] = rgbtohsv_fixpt(r,g,b)

fm = fimath('RoundingMethod', 'Floor', 'OverflowAction', 'Saturate', 'ProductMode', 'FullPrecision', 'SumMode', 'FullPrecision');
r_d = fi(double( r ), 0, 16, 7, fm);
g_d = fi(double( g ), 0, 16, 7, fm);
b_d = fi(double( b ), 0, 16, 7, fm);
r_d = fi(r_d*fi(1/255, 0, 16, 23, fm), 0, 16, 7, fm);
g_d = fi(g_d*fi(1/255, 0, 16, 23, fm), 0, 16, 7, fm);
b_d = fi(b_d*fi(1/255, 0, 16, 23, fm), 0, 16, 7, fm);
Cmax = fi(max( max( r_d, g_d ), b_d ), 0, 16, 15, fm);
Cmin = fi(min( min( r_d, g_d ), b_d ), 0, 16, 15, fm);
delta = fi(Cmax - Cmin, 0, 16, 15, fm);
h_d = fi(0, 0, 16, 12, fm);
v_d = fi(Cmax, 0, 16, 15, fm);
s_d = fi(delta, 0, 16, 15, fm);
if Cmax==0
    s_d = fi(0, 0, 16, 15, fm);
else
    s_d = fi(fi_div(delta, Cmax), 0, 16, 15, fm);
end
if delta==0
    h_d = fi(0, 0, 16, 12, fm);
elseif r_d==Cmax
    h_d = fi(fi_div((g_d - b_d), delta), 0, 16, 12, fm);
elseif g_d==Cmax
    h_d = fi(fi(2, 0, 2, 0, fm) + fi_div((b_d - r_d), delta), 0, 16, 12, fm);
elseif b_d==Cmax
    h_d = fi(fi(4, 0, 3, 0, fm) + fi_div((r_d - g_d), delta), 0, 16, 12, fm);
end
h_d = fi(h_d*fi(1/6, 0, 16, 18, fm), 0, 16, 12, fm);
if h_d<0
    h_d = fi(h_d + fi(1, 0, 1, 0, fm), 0, 16, 12, fm);
end
h = fi(uint8( h_d*fi(255, 0, 9, 0, fm) ), 0, 8, 0, fm);
s = fi(uint8( s_d*fi(255, 0, 9, 0, fm) ), 0, 8, 0, fm);
v = fi(uint8( v_d*fi(255, 0, 9, 0, fm) ), 0, 8, 0, fm);
end


function ntype = divideType(a,b)
coder.inline( 'always' );
nt1 = numerictype( a );
nt2 = numerictype( b );
ntype = numerictype( nt1.Signed || nt2.Signed, nt1.WordLength + nt2.WordLength, (nt1.FractionLength - nt2.FractionLength + nt1.WordLength + nt2.WordLength - max( nt1.WordLength, nt2.WordLength )) );
end


function c = fi_div(a,b)
coder.inline( 'always' );
if isfi( a ) && isfi( b )
    a1 = fi( a, 'RoundMode', 'fix' );
    b1 = fi( b, 'RoundMode', 'fix' );
    c1 = divide( divideType( a1, b1 ), a1, b1 );
    c = fi( c1, numerictype( c1 ), fimath( a ) );
else
    c = a/b;
end
end
